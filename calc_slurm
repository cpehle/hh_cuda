#!/bin/bash

# case 1: str >> SimulationTime; break;
# case 2: str >> h; break;
# case 3: str >> Nneur; break;
# case 4: str >> W_P_NUM_BUND; break;
# case 5: str >> BUND_SZ; break;
# case 6: str >> f_name; break;
# case 7: str >> seed; break;
# case 8: str >> rate; break;
# case 9: str >> w_p_start; break;
# case 10: str >> w_p_stop; break;
# case 11: str >> w_n; break;
# case 12: str >> par_f_name; break;
#case 13: str >> I_e; break;
#case 14: str >> dI_e; break;
#case 15: str >> gaussNoiseFlag; break;

sim_time=100000.
Nneur=100
h=0.1
rate=185.0
w_n=1.3
w_p1=2.00
w_p2=2.15
w_p_nbund=15
seed_nbund=1
seed=0
Ie1=5.27
Ie2=5.27
dI=0.01
Ie_arr=`seq $Ie1 $dI $Ie2`
# lenIe=`echo "scale=0; ($Ie2 - $Ie1) / $dI + 1" | bc`

# params for 2 neurs
# Nneur=2
# sim_time=100000.
# h=0.02
# rate=185.0
# w_n=5.4
# w_p1=0.5
# w_p2=3.6
# w_p_nbund=31
# seed_nbund=5
# seed=0
# Ie=5.27

# params for 10 neurs
# Nneur=10
# sim_time=1000000.
# h=0.1
# rate=180.0
# w_n=5.0
# w_p1=1.0
# w_p2=5.1
# w_p_nbund=41
# seed_nbund=1
# seed=0
# Ie=5.27

# params for 30 neurs
#Nneur=30
#sim_time=1000000.
#h=0.1
#rate=170.0
#w_n=2.4
#w_p1=1.5
#w_p2=2.5
#w_p_nbund=20
#seed_nbund=1
#seed=0

#Nneur=1
#rate=170.0
#w_n=0.0
#sim_time=2049
#h=0.01
#w_p1=1.0
#w_p2=21.0
#w_p_nbund=10
#seed_nbund=800
#seed=0
#Ie=5.27

path='.'
par_fname=nn_params_$Nneur.csv
let "Ntotal = Nneur*w_p_nbund*seed_nbund"

for Ie in $Ie_arr; do
	fname=$path/N\_$Nneur\_rate_$rate\_w_n_$w_n\_Ie\_$Ie
	mkdir $fname
	for j in `seq $seed $[$seed_nbund + $seed - 1]`; do
		mkdir $fname/seed\_$j
	done
done

#SBATCH -n 15
#SBATCH --ntasks-per-node=3
#SBATCH -t 1-10:00          # Runtime in D-HH:MM
#SBATCH -p gpu
#SBATCH --error=tmlog

r_str="./hh-cuda $sim_time $h $Ntotal $w_p_nbund $Nneur $path $seed $rate $w_p1 $w_p2 $w_n $par_fname $Ie1 $dI 0"
echo $r_str
mpirun -n 1 $r_str
